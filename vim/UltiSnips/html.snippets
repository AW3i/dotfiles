extends html

snippet slide "Slide in Reveal.js" b
<section>
	$0
</section>
endsnippet

snippet mdslide "Markdown snippets for Reveal.js" b
<section data-markdown>
	<script type="text/template">
		$0
	</script>
</section>
endsnippet

snippet note "Reveal.js notes" b
<aside class="notes">
	$0
</aside>
endsnippet

snippet revealjstemp "Basic template for Reveal.js" b
<!doctype html>
<html lang="en">

	<head>
		<meta charset="utf-8">

        <title>${1:Title}</title>

        <meta name="description" content="${2:Description}">
		<meta name="author" content="Alexandros Weigl">

		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">

		<link rel="stylesheet" href="css/reveal.css">
		<link rel="stylesheet" href="css/theme/blood.css" id="theme">

		<!-- Code syntax highlighting -->
		<link rel="stylesheet" href="lib/css/zenburn.css">
    </head>
    <body>
        <div class="reveal">

			<!-- Any section element inside of this container is displayed as a slide -->
			<div class="slides">
				<section>
                    <aside class="notes">
                        $3
                    </aside>
				</section>

                $0



		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.js"></script>

		<script>

			// Full list of configuration options available at:
			// https://github.com/hakimel/reveal.js#configuration
			Reveal.initialize({
				controls: true,
				progress: true,
				history: true,
				center: true,

				transition: 'fade', // none/fade/slide/convex/concave/zoom

				// Optional reveal.js plugins
				dependencies: [
					{ src: 'lib/js/classList.js', condition: function() { return !document.body.classList; } },
					{ src: 'plugin/markdown/marked.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/markdown/markdown.js', condition: function() { return !!document.querySelector( '[data-markdown]' ); } },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } },
					{ src: 'plugin/zoom-js/zoom.js', async: true },
					{ src: 'plugin/notes/notes.js', async: true }
				]
			});

		</script>

	</body>
</html>
endsnippet
